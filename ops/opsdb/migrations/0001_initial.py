# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-25 08:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('installation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(db_column='app_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(db_column='business_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('application', models.ManyToManyField(to='opsdb.Application')),
            ],
            options={
                'db_table': 'business',
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(db_column='group_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'host_group',
            },
        ),
        migrations.CreateModel(
            name='SaltFun',
            fields=[
                ('id', models.AutoField(db_column='salt_fun_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'salt_fun',
            },
        ),
        migrations.CreateModel(
            name='SaltState',
            fields=[
                ('id', models.AutoField(db_column='salt_state_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('path', models.CharField(blank=True, max_length=100, null=True)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'salt_state',
            },
        ),
        migrations.CreateModel(
            name='ServiceHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('port', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('service', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'service_host',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.CharField(db_column='system_id', max_length=100, primary_key=True, serialize=False)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('os', models.CharField(blank=True, max_length=100, null=True)),
                ('num_cpus', models.CharField(blank=True, max_length=100, null=True)),
                ('mem_total', models.CharField(blank=True, max_length=100, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('application', models.ManyToManyField(to='opsdb.Application')),
                ('business', models.ManyToManyField(to='opsdb.Business')),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='installation.Environment')),
                ('hostgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='opsdb.HostGroup')),
            ],
            options={
                'db_table': 'system',
            },
        ),
    ]
